import * as configLoader from '../lib/config-loader';
import * as helpers from './helpers';
import * as path from 'path';
const { VM: VM2 } = require('vm2');

export interface ScriptEngineOptions {
    dataDirNames: string[],
    global?: any,
    testRepoDir: string,
    timeout?: number
}

/** Implements a JS interpreter that can safely evaluate external JS expressions
 * (e.g. the "dataSet" value in test definitions) */
export class ScriptEngine {
    private dataDirNames: string[];
    private testRepoDir: string;
    private vm2: any;

    constructor(options: ScriptEngineOptions) {
        const config = configLoader.getConfig();

        this.testRepoDir = options.testRepoDir;
        this.dataDirNames = options.dataDirNames;

        const testRepoDirFullPath = path.resolve(options.testRepoDir || config.testRepoDir);

        if (!helpers.directoryExists(testRepoDirFullPath)) {
            throw new Error(helpers.format(
                'The test repo directory "{0}" doesn\'t exist. Please make sure the path is correctly specified in your server.yaml file.',
                testRepoDirFullPath
            ));
        }

        const dataDir = path.join(testRepoDirFullPath, 'data');

        this.vm2 = new VM2({
            timeout: options.timeout || 3000,
            sandbox: options.global || {}
        });
    }

    run(script: string): any {
        return this.vm2.run(script);
    }
}

