/**
 * Namespaces:
 * /session-status
 * /session-status-<SESSION_ID>
 */

import { Server } from 'http';
import { sessionSettings } from './express-session';
import * as socketIo from 'socket.io';

let io: SocketIO.Server = null;

export function initialize(httpServer: Server) {
    io = socketIo(httpServer);

    const ioSession = require('socket.io-express-session');
    io.use(ioSession(sessionSettings));

    io.on('connection', function (socket) {
        const session = (socket.handshake as any).session;
        const sessionId = (session && session.sessionId) || '(N/A)';
        // console.log('Established socket.io connection for session ' + sessionId);
    });
}


export function onActorsChanged(actorId: number) {
    if (!io) return;

    io.of('/actors').emit('actors-changed', {
        actorId: actorId
    });
}

export function onSessionStatusChanged(sessionId: number, newStatus: string) {
    if (!io) return;

    io.of('/session-status').emit('status-changed', {
        sessionId: sessionId,
        newStatus: newStatus
    });

    const sessionIdString = sessionId.toString().toLowerCase();

    io.of(`/session-status-${sessionIdString}`).emit('status-changed', {
        sessionId: sessionId,
        newStatus: newStatus
    });
}