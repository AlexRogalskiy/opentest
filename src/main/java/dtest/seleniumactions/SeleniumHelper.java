package dtest.seleniumactions;

import java.io.File;
import java.util.concurrent.TimeUnit;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.ie.InternetExplorerDriver;
import org.openqa.selenium.safari.SafariDriver;

public class SeleniumHelper {

    private static WebDriver driver;

    public static WebDriver getDriver() {
        return driver;
    }

    public static WebDriver createDriver(String browser, String driverExecutablePath) {

        File driverExecutableFile = new File(driverExecutablePath);

        switch (browser) {
            case "chrome":
                System.setProperty("webdriver.chrome.driver", driverExecutableFile.getAbsolutePath());
                driver = new ChromeDriver();
                break;
            case "edge":
                System.setProperty("webdriver.edge.driver", driverExecutableFile.getAbsolutePath());
                driver = new EdgeDriver();
            case "firefox":
                System.setProperty("webdriver.gecko.driver", driverExecutableFile.getAbsolutePath());
                driver = new FirefoxDriver();
                break;
            case "ie":
                System.setProperty("webdriver.ie.driver", driverExecutableFile.getAbsolutePath());
                driver = new InternetExplorerDriver();
                break;
            case "safari":
                System.setProperty("webdriver.safari.driver", driverExecutableFile.getAbsolutePath());
                driver = new SafariDriver();
                break;
            default:
                throw new RuntimeException(
                        String.format("The \"browser\" argument specifies a browser that is invalid or not supported. The argument value was \"%s\"",
                                browser));
        }

        driver.manage().timeouts()
                .setScriptTimeout(20, TimeUnit.SECONDS);
        driver.manage().window().maximize();
        return driver;
    }
}
