/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dtest.mobileactions;

import io.appium.java_client.MobileElement;
import org.openqa.selenium.By;

/**
 *
 * @author mc53437
 */
public class SwipeAndAssertElementVisible extends MobileTestAction {

    @Override
    public void run() {

        By locator = readLocatorArgument("locator");
        String swipeDirection = readStringArgument("swipe", "none");
        By verifyElementLocator = readLocatorArgument("verifyElementLocator");

        swipeAndCheckElementVisible(locator, verifyElementLocator,swipeDirection);

    }

    protected void swipeAndCheckElementVisible(By locator, By verifyElementLocator, String direction) {
        // TODO: Revisit this and implement a smarter algorithm - not ok to repeat this for an arbitrary number of times
        boolean elementWasFound = false;

        for (int i = 0; i < 6; i++) {
            try {
                waitForElementVisible(verifyElementLocator, 1);
                elementWasFound = true;
                String message = "Found element " + locator.toString();
                System.out.println(message);
                break;
            } catch (Exception ex) {
                MobileElement element = findElement(locator, 1);
                
                if (direction.equalsIgnoreCase("up")) {
                    scrollUp(element);
                } else if (direction.equalsIgnoreCase("down")) {
                    scrollDown(element);
                } else if (direction.equalsIgnoreCase("left")) {
                    scrollLeft(element);
                } else if (direction.equalsIgnoreCase("right")) {
                    scrollRight(element);
                }
            }
        }

        if (!elementWasFound) {
            throw new RuntimeException(String.format("Could not find element %s", locator));
        }
    }

}
