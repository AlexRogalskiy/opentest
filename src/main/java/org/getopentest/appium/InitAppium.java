package org.getopentest.appium;

import io.appium.java_client.AppiumDriver;
import io.appium.java_client.MobileElement;
import java.util.HashMap;
import java.util.Map;
import static org.getopentest.appium.AppiumHelper.getCapabilityAsString;
import org.getopentest.base.TestAction;
import org.getopentest.util.Config;

public class InitAppium extends TestAction {

    @Override
    public void run() {
        super.run();

        String platform = this.readStringArgument("platform", null);
        String url = this.readStringArgument("url");
        Map<String, Object> capsMap = this.readMapArgument("desiredCapabilities", new HashMap<>());

        if (platform == null) {
            Config config = AppiumHelper.getConfig();
            platform = getCapabilityAsString(
                    capsMap,
                    "platformName",
                    getCapabilityAsString(
                            capsMap,
                            "platform",
                            config.getString("appium.desiredCapabilities.platformName", null)));
        }

        if (platform != null) {
            platform = platform.trim().toLowerCase();

            if (platform.equals("android")) {
                capsMap.put("platformName", "Android");
            } else if (platform.equals("ios")) {
                capsMap.put("platformName", "iOS");
            }
        }

        AppiumHelper.discardDriver();
        AppiumDriver<MobileElement> driver = AppiumHelper.createDriverWithRetries(url, capsMap);

        // TODO: Use the AppiumDriverSerializer class so we can avoid the stack overflow when the driver output is serialized to JSON
        // this.writeOutput("driver", driver);
    }
}
