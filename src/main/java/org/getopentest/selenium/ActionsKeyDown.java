package org.getopentest.selenium;

import org.getopentest.annotations.TestActionArgument;
import org.getopentest.annotations.TestActionClass;
import org.getopentest.annotations.TestArgumentType;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;

@TestActionClass(description = "Press a key.")
@TestActionArgument(
        name = "locator", type = TestArgumentType.OBJECT, optional = true,
        description = "Locator object that identifies the element to focus on "
        + "before pressing the key.")
@TestActionArgument(
        name = "key", type = TestArgumentType.STRING, optional = true,
        description = "The key to press. Valid values are the string representations "
        + "of the org.openqa.selenium.Keys enumeration members (e.g. \"CONTROL\", "
        + "\"SHIFT\", \"TAB\", etc.).")
@TestActionArgument(
        name = "char", type = TestArgumentType.STRING, optional = true,
        description = "The character (letter) corresponding to the key to be pressed.")

public class ActionsKeyDown extends SeleniumTestAction {

    @Override
    public void run() {
        super.run();

        By locator = this.readLocatorArgument("locator", null);
        String keyValue = this.readStringArgument("key", null);
        String charValue = this.readStringArgument("char", null);

        CharSequence key = null;
        if (keyValue != null) {
            key = Keys.valueOf(keyValue);
        } else if (charValue != null) {
            key = charValue;
        } else {
            throw new RuntimeException(
                    "You must either provide the \"key\" argument or the \"char\" "
                    + "argument to specify the key you want to press.");
        }

        if (locator != null) {
            WebElement element = this.getElement(locator);
            SeleniumTestAction.getActionsInstance().keyDown(element, key);
        } else {
            SeleniumTestAction.getActionsInstance().keyDown(key);
        }
    }
}
