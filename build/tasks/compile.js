const config = require('../../lib/config-loader.js').config;
const helpers = require('../lib/helpers.js');
const path = require('path');
const shelljs = require('shelljs');


// Compile server
buildProject({
    name: 'opentest-server',
    path: 'server',
    type: 'node'
});

// // Compile base
// buildProject(config.repos.base, 'maven');


// //Compile plugins
// for (let pluginRepo of config.repos.plugins) {
//     buildProject(pluginRepo, 'maven');
// }

// // Compile actor
// buildProject(config.repos.actor, 'maven');

function buildProject(project) {
    repo, projectType

    helpers.logTitle(helpers.format('Building project {0}...', project.name));
    process.chdir(path.join(reposDir, repo.repoDirName));
    let returnVal;

    if (project.type === 'maven') {
        returnVal = shelljs.exec('mvn clean install');
        if (returnVal.code != 0) {
            throw new Error(`Failed building Maven project ${project.name}.\n ${returnVal.stderr}`);
        }
    } else if (project.type === 'node') {
        console.log(`Installing dependencies for ${project.name}...`);
        returnVal = shelljs.exec('npm install');
        if (returnVal.code != 0) {
            throw new Error(`Failed installing dependencies for Node project ${repo.repoDirName}.\n ${returnVal.stderr}`);
        }

        returnVal = shelljs.exec('npm run build');
        if (returnVal.code != 0) {
            throw new Error(`Failed building Node project ${project.name}.\n ${returnVal.stderr}`);
        }
    } else {
        throw new Error(`Unknown project type: ${project.type}`);
    }
}