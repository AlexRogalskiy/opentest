var appRoot = require('app-root-path');
import * as fs from 'fs';
import * as helpers from '../lib/helpers';
import * as yaml from 'js-yaml';
import * as path from 'path';

export interface IConfig {
    testRepoLocation: string;
    testRepoDirName: string;
}

let configFilePath = path.join(appRoot.path, 'config.yaml');

let config: IConfig = {
    testRepoDirName: "test-defs",
    testRepoLocation: "."
};

// Override defaults values with the ones from the config file
if (helpers.fileExists(configFilePath)) {
    try {
        let configFile: Object = yaml.safeLoad(fs.readFileSync(configFilePath, 'utf8'));

        for (let prop in configFile) {
            if (configFile.hasOwnProperty(prop)) {
                if ((config as Object).hasOwnProperty(prop)) {
                    config[prop] = configFile[prop];
                } else {
                    console.log(helpers.format('WARN: Configuration file contains parameter "{0}", which is not a valid parameter name.',
                        prop));
                }
            }
        }
    } catch (err) {
        console.log("Failed to load config file. " + err.message);
    }
}

export { config };