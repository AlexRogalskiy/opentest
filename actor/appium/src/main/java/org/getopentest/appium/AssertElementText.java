package org.getopentest.appium;

import org.getopentest.annotations.TestActionArgument;
import org.getopentest.annotations.TestActionClass;
import org.getopentest.annotations.Type;
import org.openqa.selenium.By;

@TestActionClass(
        description = "Validates a UI element's visible text.")
@TestActionArgument(name = "locator", type = Type.MAP, optional = false,
        description = "The locator of the UI element.")
@TestActionArgument(name = "text", type = Type.STRING, optional = false,
        description = "The expected text. If the element's text differs from "
        + "the expected, the action will fail.")
@TestActionArgument(name = "direction", type = Type.STRING, optional = true,
        description = "Specifies whether the test actor should perform swipe"
        + " gestures to find the element in case it is not currently visible."
        + " Valid values are: up, down, left, right, none.")

/**
 * Validates a UI element's visible text.
 */
public class AssertElementText extends AppiumTestAction {

    @Override
    public void run() {
        super.run();

        String expectedText = readStringArgument("text");
        By locator = readLocatorArgument("locator");
        String direction = readStringArgument("direction", "none");
        String swipeDirection = readStringArgument("swipe", direction);

        swipeAndCheckElementVisible(locator, swipeDirection);

        String actualText = getElement(locator).getText();
        if (actualText.contains(expectedText)) {
            System.out.println(String.format("Values are equal. Expected: %s Actual: %s",
                    expectedText,
                    actualText));
        } else {
            throw new RuntimeException(String.format("Values are not equal. Expected: %s Actual: %s",
                    expectedText,
                    actualText));
        }
    }
}
